<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dict_Setting" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="argument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1921.3333333333333,963.3333333333334</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Azure.Models</x:String>
      <x:String>UiPath.Azure.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="75">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Azure</AssemblyReference>
      <AssemblyReference>UiPath.Azure.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="フローチャート" sap:VirtualizedContainerService.HintSize="892.6666666666666,898.6666666666666" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ImportData" />
      <Variable x:TypeArguments="x:Int32" Name="int_Iterator" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ImportData2" />
      <Variable x:TypeArguments="x:String" Name="str_UserName" />
      <Variable x:TypeArguments="x:String" Name="str_ImportFilePath" />
      <Variable x:TypeArguments="x:String" Name="str_LoginPassword" />
      <Variable x:TypeArguments="x:String" Name="str_ExportPath" />
      <Variable x:TypeArguments="x:String" Name="str_Email" />
      <Variable x:TypeArguments="x:String" Name="str_URL" />
      <Variable x:TypeArguments="sd:DataRow" Name="dr_Iterator" />
      <Variable x:TypeArguments="x:String" Name="str_Address" />
      <Variable x:TypeArguments="x:String" Name="str_Name" />
      <Variable x:TypeArguments="x:String" Name="str_Division" />
      <Variable x:TypeArguments="x:String" Name="str_Phone" />
      <Variable x:TypeArguments="x:String" Name="str_RegistrationDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ExcutionResult" />
      <Variable x:TypeArguments="x:String" Name="str_Cell" />
      <Variable x:TypeArguments="s:DateTime" Name="dateT_Today" />
      <Variable x:TypeArguments="s:DateTime" Name="dateT_RegistrationDate" />
      <Variable x:TypeArguments="s:DateTime" Name="dateT_Past" />
      <Variable x:TypeArguments="x:String" Name="str_ResultCell" />
      <Variable x:TypeArguments="sd:DataRow" Name="dr_Result" />
      <Variable x:TypeArguments="sd:DataRow" Name="dr_ResultData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_SuccessedResult" />
      <Variable x:TypeArguments="x:Int32" Name="int_Iterator2" />
      <Variable x:TypeArguments="x:String" Name="str_Age" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Mailinfo" />
      <Variable x:TypeArguments="x:String" Name="str_ExcutionLogFilePath" />
      <Variable x:TypeArguments="ui:Image" Name="img_ScreenShot" />
      <Variable x:TypeArguments="x:Int32" Name="int_TotalFaildResult" />
      <Variable x:TypeArguments="x:Int32" Name="int_TotalSuccessedResult" />
      <Variable x:TypeArguments="x:Int32" Name="int_TotalSkippedResult" />
      <Variable x:TypeArguments="x:String" Name="str_ResultEmail" />
      <Variable x:TypeArguments="x:Int32" Name="int_DuplicateCounter" />
      <Variable x:TypeArguments="x:Int32" Name="int_Age" />
      <Variable x:TypeArguments="x:Int32" Name="int_Phone" />
      <Variable x:TypeArguments="x:String" Name="str_OutputFilePath" />
      <Variable x:TypeArguments="x:String" Name="str_DataFolderPath" />
      <Variable x:TypeArguments="x:String" Name="wk_Transition" />
      <Variable x:TypeArguments="x:String" Name="wk_ExceptionMessage" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">420,2.6666666666666643</av:Point>
        <av:Size x:Key="ShapeSize">60,74.66666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">450,77.33333333333334 450,127.66666666666666</av:PointCollection>
        <x:Double x:Key="Height">861.6666666666667</x:Double>
        <x:Double x:Key="Width">858.9999999999997</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowDecision x:Name="__ReferenceID0" Condition="[int_Iterator &lt; dt_ImportData.Rows.Count]" DisplayName="フロー条件分岐" sap:VirtualizedContainerService.HintSize="78.66666666666667,86.66666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">410.6666666666667,476.6666666666667</av:Point>
          <av:Size x:Key="ShapeSize">78.66666666666667,86.66666666666667</av:Size>
          <av:PointCollection x:Key="TrueConnector">410.6666666666667,520 380.66666666666674,520 380.66666666666674,519.6666666666666 320,519.6666666666666</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">489.33333333333337,520 519.3333333333333,520 519.3333333333333,490 590,490</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">120,492.99999999999994</av:Point>
              <av:Size x:Key="ShapeSize">200,54</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">220,546.3333333333333 220,576.3333333333334 450,576.3333333333334 450,563.3333333333334</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="S04 Datatable Operation" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence sap2010:Annotation.AnnotationText="・S04 ワークフロー内全ての条件式において、datarow型変数でカラム名を指定する際,&#xD;&#xA;数字ではなくカラム名で指定、またdatatable型をString型に直接代入&#xD;&#xA;→変更済み、datatable.Rows().item(カラム名)の形式に統一&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" DisplayName="S04" sap:VirtualizedContainerService.HintSize="512,1624.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_458">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="・インポートしたデータ“Name”の列内の重複の条件判定をする際変更前は規則的な名前の重複判定を行っていたがどのような名前形式であれ重複しているか判定&#xD;&#xA;→インポートしたデータのNameの数をカウントしカウント数2以上の名前の一回目ではループカウントを記録、二つ目以降の名前は重複している名前として出力  &#xD;&#xA;&#xD;&#xA;" DisplayName="S04-1 Name" sap:VirtualizedContainerService.HintSize="450,196.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_423">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_NameNumber" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="597.3333333333334,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Name]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData(int_Iterator)("Name").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["A"+(int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_ResultCell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["H" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="名前の長さが30文字以上か名前が空欄" sap:VirtualizedContainerService.HintSize="597.3333333333334,852" sap2010:WorkflowViewState.IdRef="IfElseIf_42">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[str_Name.Length &gt; 30 or String.IsNullOrEmpty(str_Name)]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_418">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_108" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_417">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_53" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_65" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <ui:IfElseIf DisplayName="名前の列にある同名の名前の個数" sap:VirtualizedContainerService.HintSize="597.3333333333334,397.3333333333333" sap2010:WorkflowViewState.IdRef="IfElseIf_43">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[dt_ImportData.Select(&quot;[Name] = '&quot;+str_Name+&quot;'&quot;).Count &gt; 1]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_419">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_170">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[int_DuplicateCounter]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[int_DuplicateCounter +1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,852" sap2010:WorkflowViewState.IdRef="IfElseIf_44">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[dt_ImportData.Select(&quot;[Name] = '&quot;+str_Name+&quot;'&quot;).Count &gt; 1 andalso int_DuplicateCounter &gt;= 2]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_421">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_109" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_420">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_54" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_66" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <If Condition="[dt_ImportData.Select(&quot;[Name] = '&quot;+str_Name+&quot;'&quot;).Count = int_DuplicateCounter]" DisplayName="条件分岐 (if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,374.6666666666667" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,172.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_422">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_171">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[int_DuplicateCounter]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="S04-2 Address " sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_428">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="597.3333333333334,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Address]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Address").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["B" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="" sap:VirtualizedContainerService.HintSize="597.3333333333334,852" sap2010:WorkflowViewState.IdRef="IfElseIf_45">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[String.IsNullOrEmpty(str_Address)]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_425">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_110" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_424">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_55" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_67" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,977.3333333333334" sap2010:WorkflowViewState.IdRef="IfElseIf_46">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[str_Address.Length &gt; 50]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,776" sap2010:WorkflowViewState.IdRef="Sequence_427">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="484,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_172">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[str_Address]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[str_Address.Remove(49)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_111" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_426">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_56" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_68" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                </Sequence>
                <Sequence DisplayName="S04-3 Phone" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_431">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="597.3333333333334,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Phone]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Phone").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["C" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,852" sap2010:WorkflowViewState.IdRef="IfElseIf_47">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[str_Phone.Length &lt;&gt;  9 Or integer.tryparse(str_Phone, int_Phone ) = False]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_430">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_112" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_429">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_57" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_69" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                </Sequence>
                <Sequence sap2010:Annotation.AnnotationText="・インポートしたデータ“Email”のメールフォーマットであるか条件判定をする際ドメインをcontains関数で含まれているか判断するのではなくメールアドレスの形式であるか判断する&#xD;&#xA;→変更済み、正規表現を使用しない場合は元の仕様に変更&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" DisplayName="S04-4  Email" sap:VirtualizedContainerService.HintSize="450,213.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_435">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="bool_MailAddressCheck" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="659.3333333333334,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Email]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Email").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["D" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="メールアドレス正規表現" sap:VirtualizedContainerService.HintSize="659.3333333333334,60" sap2010:WorkflowViewState.IdRef="IsMatch_3" Input="[str_Email]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;メール アドレス&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;指定回数&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase, Compiled" Result="[bool_MailAddressCheck]" />
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="659.3333333333334,962.6666666666666" sap2010:WorkflowViewState.IdRef="IfElseIf_48">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[not String.IsNullOrEmpty(str_Email) andalso bool_MailAddressCheck = False]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="608,761.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_434">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_433">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_113" InstanceCachePeriod="3000" WorkbookPath="Data\ExcutionResult.xlsx">
                                  <ui:ExcelApplicationScope.Body>
                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_432">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_58" Range="[str_Cell]" SheetName="Sheet1" />
                                        <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_70" SheetName="Sheet1" Text="Failed" />
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ExcelApplicationScope.Body>
                                </ui:ExcelApplicationScope>
                              </Sequence>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                </Sequence>
                <Sequence sap2010:Annotation.AnnotationText="・インポートしたデータ“division”を条件判定する際Contains関数を使用し1～3が含まれているか判断するのではなくデータテーブルImportData2に判定するDivisionがExcelファイル内に存在するか判定&#xD;&#xA;" DisplayName="S04-5 Division" sap:VirtualizedContainerService.HintSize="450,163.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_438">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="597.3333333333334,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Division]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Division").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["E" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,852" sap2010:WorkflowViewState.IdRef="IfElseIf_49">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[not String.IsNullOrEmpty(str_Division) andalso dt_ImportData2.Select(&quot;[Division] = '&quot;+str_Division+&quot;'&quot;).Count = 0]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_437">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_114" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_436">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_59" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_71" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                </Sequence>
                <Sequence DisplayName="S04-6 Age" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_445">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="bool_IsNumeric" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="636.6666666666666,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Age]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Age").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["F" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="" sap:VirtualizedContainerService.HintSize="636.6666666666666,1084.6666666666667" sap2010:WorkflowViewState.IdRef="IfElseIf_50">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[Integer.TryParse(str_Age, int_Age) = False]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_440">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_115" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_439">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_60" Range="[str_Cell]" SheetName="Sheet1" />
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_72" SheetName="Sheet1" Text="Failed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                        <ui:IfElseIfBlock BlockType="Else">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_441">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_173">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[int_Age]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[convert.ToInt32(dt_ImportData.rows(int_Iterator).item(5).ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <If Condition="[int_Age &lt; 20 or int_Age &gt; 70]" DisplayName="条件分岐 (if)" sap:VirtualizedContainerService.HintSize="636.6666666666666,1044" sap2010:WorkflowViewState.IdRef="If_9">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="558,761.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_444">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="496,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_443">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="434,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_116" InstanceCachePeriod="3000" WorkbookPath="Data\ExcutionResult.xlsx">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="400,430" sap2010:WorkflowViewState.IdRef="Sequence_442">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelSetRangeColor Color="[color.yellow]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="338,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_61" Range="[str_Cell]" SheetName="Sheet1" />
                                  <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_73" SheetName="Sheet1" Text="Skipped" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="S04-7 RegistrationDate" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_453">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:DateTime" Name="dateT_Future" />
                    <Variable x:TypeArguments="s:DateTime" Name="dateT_RegistrationDate" />
                    <Variable x:TypeArguments="s:DateTime" Name="dateT_Past" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="659.3333333333334,192.66666666666666" sap2010:WorkflowViewState.IdRef="MultipleAssign_17">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_RegistrationDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[dt_ImportData.rows(int_Iterator).Item("Registration Date").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[str_Cell]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["G" + (int_Iterator+2).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateT_Past]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="s:DateTime">[Datetime.Parse(Now.AddYears(-1).tostring("yyyy/MM/dd"))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="s:DateTime">[dateT_Future]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(Now.AddYears(+1).tostring("yyyy/MM/dd"))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="659.3333333333334,1196" sap2010:WorkflowViewState.IdRef="IfElseIf_51">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[datetime.TryParse(str_RegistrationDate, dateT_RegistrationDate) = False  _&#xA;Or String.IsNullOrEmpty(str_RegistrationDate)]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="608,761.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_448">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_447">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_117" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                                  <ui:ExcelApplicationScope.Body>
                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_446">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelSetRangeColor Color="[color.Red]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_62" Range="[str_Cell]" SheetName="Sheet1" />
                                        <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_74" SheetName="Sheet1" Text="Failed" />
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ExcelApplicationScope.Body>
                                </ui:ExcelApplicationScope>
                              </Sequence>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                        <ui:IfElseIfBlock BlockType="Else">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_449">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_174">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[dateT_RegistrationDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[datetime.Parse(str_RegistrationDate)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                  <If Condition="[dateT_RegistrationDate &gt; dateT_Future _&#xA;Or dateT_RegistrationDate &lt; dateT_Past _&#xA;And String.IsNullOrEmpty(str_RegistrationDate) = False  _&#xA;And datetime.tryParse(str_RegistrationDate, dateT_RegistrationDate) = True]" DisplayName="条件分岐 (if)" sap:VirtualizedContainerService.HintSize="659.3333333333334,940" sap2010:WorkflowViewState.IdRef="If_10">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="588,738" sap2010:WorkflowViewState.IdRef="Sequence_452">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,650.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_451">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,540" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_118" InstanceCachePeriod="1000" WorkbookPath="Data\ExcutionResult.xlsx">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_450">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelSetRangeColor Color="[color.yellow]" DisplayName="範囲の色を設定" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_63" Range="[str_Cell]" SheetName="Sheet1" />
                                  <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_75" SheetName="Sheet1" Text="Skipped" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="S04-8 Successed" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_457">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="597.3333333333334,280.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_119" InstanceCachePeriod="1000" WorkbookPath="[str_OutputFilePath]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,170.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_454">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ExcutionResult]" DisplayName="範囲を読み込み" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_23" SheetName="Sheet1">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <ui:IfElseIf DisplayName="条件分岐 (else if)" sap:VirtualizedContainerService.HintSize="597.3333333333334,620.6666666666666" sap2010:WorkflowViewState.IdRef="IfElseIf_52">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[String.IsNullOrEmpty(dt_ExcutionResult.rows(int_Iterator).item(7).tostring)]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="546,419.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_456">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,308.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_120" InstanceCachePeriod="1000" WorkbookPath="[str_OutputFilePath]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,198.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_455">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelWriteCell Cell="[str_ResultCell]" DisplayName="セルに書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_76" SheetName="Sheet1" Text="Successed" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                  </ui:IfElseIf>
                </Sequence>
                <Assign DisplayName="S04-9 Count up Iterator" sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_175">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_Iterator]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[int_Iterator+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="516.6666666666666,22" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new BusinessRuleException(&quot;Abort&quot;)]" sap:VirtualizedContainerService.HintSize="334,120.66666666666667" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_13" Reason="[wk_Transition + wk_ExceptionMessage + &quot;in S0&quot;]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowStep x:Name="__ReferenceID3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">590,400</av:Point>
              <av:Size x:Key="ShapeSize">200,180</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">690,580 690,603.3333333333334</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="・S05のブラウザを使用するワークフローを別のxamlファイルにしinvokeする&#xD;&#xA;→変更済み&#xD;&#xA;" DisplayName="S05 Browser operation" sap:VirtualizedContainerService.HintSize="200,180" sap2010:WorkflowViewState.IdRef="Sequence_412">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_CheckResult" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="S05-1 Invoke Browser Operation robot" sap:VirtualizedContainerService.HintSize="438.6666666666667,354.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_5">
              <TryCatch.Try>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Browser Operation.xaml - ワークフロー ファイルを呼び出し" sap:VirtualizedContainerService.HintSize="379.3333333333333,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Robot\custom\Browser Operation.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ExcutionResult">[dt_ExcutionResult]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_str_URL">[str_URL]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_str_LoginPassword">[str_LoginPassword]</InArgument>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_SuccessedResult" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_str_ResultEmail">[str_ResultEmail]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_str_OutputFilePath">[str_OutputFilePath]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_str_DataFolderPath">[str_DataFolderPath]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_wk_Transition">[wk_Transition]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_wk_ExceptionMessage">[wk_ExceptionMessage]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new BusinessRuleException(&quot;Abort&quot;)]" sap:VirtualizedContainerService.HintSize="334,173.33333333333334" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_12" Reason="[wk_Transition + wk_ExceptionMessage + &quot;Failed to invoke browser operation robot&quot;]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">590,603.3333333333334</av:Point>
                  <av:Size x:Key="ShapeSize">200,54</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">690,657.3333333333334 690,698.3333333333334</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="S06 Export Excel Execution log" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence sap2010:Annotation.AnnotationText="・S06-2,3のコピーリネームを一つのアクティビティに変更" DisplayName="S06" sap:VirtualizedContainerService.HintSize="496,426" sap2010:WorkflowViewState.IdRef="Sequence_463">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="S06-1 Assign Today's date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_176">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_ExcutionLogFilePath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["\Output_"+ Now.tostring("yyyyMMddhhmmss")+".xlsx"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[str_ExportPath + str_ExcutionLogFilePath]" DisplayName="S06-2 Copy the Import file to Export folder" sap:VirtualizedContainerService.HintSize="434,159.33333333333334" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[str_OutputFilePath]" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new BusinessRuleException(&quot;Abort&quot;)]" sap:VirtualizedContainerService.HintSize="334,120.66666666666667" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_14" Reason="[wk_Transition + wk_ExceptionMessage + &quot;in S07&quot;]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">590,698.3333333333334</av:Point>
                      <av:Size x:Key="ShapeSize">200,163.33333333333334</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="・S07で送信するメールにS04で判定した結果を記載&#xD;&#xA;→変更済み&#xD;&#xA;" DisplayName="S07 Email with the result report" sap:VirtualizedContainerService.HintSize="200,163.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_474">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="str_ResultMailAddress" />
                      <Variable x:TypeArguments="x:String" Name="str_ResultMailSubject" />
                      <Variable x:TypeArguments="x:String" Name="str_ResultMailContents" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="S07-1 Assign Result Count" sap:VirtualizedContainerService.HintSize="438.6666666666667,162" sap2010:WorkflowViewState.IdRef="MultipleAssign_20">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_67">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[int_TotalSuccessedResult]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt_ExcutionResult.Select("[Result] = 'Successed'").Count]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[int_TotalFaildResult]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt_ExcutionResult.Select("[Result] = 'Failed'").Count]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[int_TotalSkippedResult]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[dt_ExcutionResult.Select("[Result] = 'Skipped'").Count]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <TryCatch DisplayName="S07-2 Send out the Email" sap:VirtualizedContainerService.HintSize="438.6666666666667,444.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                      <TryCatch.Try>
                        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;The following is the execution result.&#xA;Successed : &quot; + int_TotalSuccessedResult.ToString + vbCrLf +&#xA;    &quot;Failed : &quot; + int_TotalFaildResult.ToString + vbCrLf +&#xA;    &quot;Skipped : &quot; + int_TotalSkippedResult.ToString]" DisplayName="Outlook メール メッセージを送信" sap:VirtualizedContainerService.HintSize="334,205.33333333333334" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="RPA Practice 1 is completed!" To="[str_ResultEmail]">
                          <ui:SendOutlookMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[str_ExportPath + "\"+str_ExcutionLogFilePath]</InArgument>
                            </scg:List>
                          </ui:SendOutlookMail.Files>
                        </ui:SendOutlookMail>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new BusinessRuleException(&quot;Abort&quot;)]" sap:VirtualizedContainerService.HintSize="334,120.66666666666667" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_15" Reason="[wk_Transition + wk_ExceptionMessage + &quot;S08&quot;]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.False>
    </FlowDecision>
    <FlowDecision x:Name="__ReferenceID6" sap2010:Annotation.AnnotationText="・S02のアクティビティ“ファイルパスの有無を確認”とフロー条件分岐の条件式“File.Exist”は役割が重複している為どちらか不要&#xD;&#xA;→フロー条件分岐の条件式“File.Exist”に統一&#xD;&#xA;&#xD;&#xA;・S02のパスの有無を判断するワークフローがS02とS03に一つのif文を使用しているのでワークフローを二つに分ける&#xD;&#xA;→変更済み&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" Condition="[File.Exists(str_ImportFilePath)]" DisplayName="フロー条件分岐" sap:VirtualizedContainerService.HintSize="78.66666666666667,86.66666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">410.6666666666667,246.66666666666669</av:Point>
          <av:Size x:Key="ShapeSize">78.66666666666667,86.66666666666667</av:Size>
          <av:PointCollection x:Key="TrueConnector">410.6666666666667,290 320,290 320,400 350,400</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">489.33333333333337,290 640,290</av:PointCollection>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">350,357.6666666666667</av:Point>
              <av:Size x:Key="ShapeSize">200,84.66666666666667</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">450,442.33333333333337 450,476.6666666666667</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="S02 Import Excel Data" sap:VirtualizedContainerService.HintSize="200,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_321">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Comment DisplayName="コメント" sap:VirtualizedContainerService.HintSize="546,192" sap2010:WorkflowViewState.IdRef="Comment_2" Text="・S02のパスの有無を判断するワークフローがS02とS03に一つのif文を使用しているのでワークフローを二つに分ける&#xA;→変更済み&#xA;&#xA;・S02のアクティビティ“ファイルパスの有無を確認”とフロー条件分岐の条件式“File.Exist”は役割が重複している為どちらか不要&#xA;→フロー条件分岐の条件式“File.Exist”に統一&#xA;" />
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="S02-1 Import InputData and store into datatable" sap:VirtualizedContainerService.HintSize="546,380.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_77" InstanceCachePeriod="1000" WorkbookPath="[str_ImportFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,270.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_322">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ImportData]" DisplayName="範囲を読み込み" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_20" SheetName="Sheet1">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ImportData2]" DisplayName="範囲を読み込み" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_21" SheetName="Sheet2">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
            <ui:IfElseIf DisplayName="S02-2 Check the import data columns" sap:VirtualizedContainerService.HintSize="546,389.3333333333333" sap2010:WorkflowViewState.IdRef="IfElseIf_37">
              <ui:IfElseIf.ConditionBlocks>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" Condition="[dt_ImportData.Columns(0).ToString &lt;&gt; &quot;Name&quot; _&#xA;Or dt_ImportData.Columns(1).ToString &lt;&gt; &quot;Address&quot; _&#xA;Or dt_ImportData.Columns(2).ToString &lt;&gt; &quot;Phone&quot; _&#xA;Or dt_ImportData.Columns(3).ToString &lt;&gt; &quot;Email&quot;　_&#xA;Or dt_ImportData.Columns(4).ToString &lt;&gt; &quot;Division&quot; _&#xA;Or dt_ImportData.Columns(5).ToString &lt;&gt; &quot;Age&quot; _&#xA;Or dt_ImportData.Columns(6).ToString &lt;&gt; &quot;Registration Date&quot;]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="450,187.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_323">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="メッセージ ボックス" sap:VirtualizedContainerService.HintSize="388,76.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_48" Text="[&quot;The file does not have the required columns&quot;]" />
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
            <Sequence DisplayName="S02-3 Operation datatable" sap:VirtualizedContainerService.HintSize="546,541.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_475">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SortDataTable ColumnName="{x:Null}" DataColumn="{x:Null}" DataTable="[dt_ImportData]" DisplayName="データ テーブルを並べ替え" sap:VirtualizedContainerService.HintSize="484,82" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[dt_ImportData]" SortOrder="Ascending">
                <ui:SortDataTable.ColumnIndex>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                  </InArgument>
                </ui:SortDataTable.ColumnIndex>
              </ui:SortDataTable>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="484,308.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_98" InstanceCachePeriod="1000" WorkbookPath="[str_OutputFilePath]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="450,198.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_379">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_ImportData]" DisplayName="範囲に書き込み" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet1" StartingCell="A2:G11" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">640,247.66666666666669</av:Point>
              <av:Size x:Key="ShapeSize">200,84.66666666666667</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="S03 File Not found" sap:VirtualizedContainerService.HintSize="200,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_320">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TerminateWorkflow DisplayName="S03-1 Display message" Exception="[new BusinessRuleException(&quot;Abort&quot;)]" sap:VirtualizedContainerService.HintSize="388,173.33333333333334" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_8" Reason="[&quot;File Not found: &quot; + str_ImportFilePath]" />
          </Sequence>
        </FlowStep>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">350,127.66666666666666</av:Point>
          <av:Size x:Key="ShapeSize">200,84.66666666666667</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">450,212.33333333333331 450,246.66666666666669</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="S01 Initialize" sap:VirtualizedContainerService.HintSize="200,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_471">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="S01-1 Kill Processes" sap:VirtualizedContainerService.HintSize="493.3333333333333,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_468">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" sap2010:Annotation.AnnotationText="・S01内のOutlookはアクティビティ”KILL”不要&#xD;&#xA;→検証の結果必要なし、削除&#xD;&#xA;" AppliesTo="OnlyCurrentSession" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="388,198.66666666666666" sap2010:WorkflowViewState.IdRef="KillProcess_9" ProcessName="Excel">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:KillProcess>
          <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" AppliesTo="OnlyCurrentSession" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="388,136.66666666666666" sap2010:WorkflowViewState.IdRef="KillProcess_10" ProcessName="chrome" />
        </Sequence>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="S01-2 Load Config" sap:VirtualizedContainerService.HintSize="493.3333333333333,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Robot\custom\LoadConfig.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dict_Setting">[dict_Setting]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <Sequence DisplayName="S01-3 Initialize variables" sap:VirtualizedContainerService.HintSize="493.3333333333333,596.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_470">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign sap2010:Annotation.AnnotationText="・アクティビティ”代入”を一つ以上連続して使用する場合、アクティビティ“複数代入”を使用&#xD;&#xA;→変更済み&#xD;&#xA;" DisplayName="複数代入" sap:VirtualizedContainerService.HintSize="431.3333333333333,486" sap2010:WorkflowViewState.IdRef="MultipleAssign_19">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_ImportFilePath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Import File Path")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_58">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_UserName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Login Username")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_LoginPassword]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Login Password")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_ResultEmail]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Email Address")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_ExportPath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Export Path")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_URL]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("MS 365 Login")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_OutputFilePath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Output File Path")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[str_DataFolderPath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[dict_Setting("Data Folder Path")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[wk_Transition]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">Abort</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[wk_ExceptionMessage]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">Error has occured</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[int_Iterator]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID6</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>